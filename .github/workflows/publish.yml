name: Publish Package

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        include:
          - registry_name: npm
            registry_url: 'https://registry.npmjs.org/'
            access: 'public'
          - registry_name: github
            registry_url: 'https://npm.pkg.github.com/'
            access: ''

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.9.0
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build package
        run: pnpm run build

      - name: Generate .npmrc dynamically
        run: |
          echo "//${{ matrix.registry_url#https:// }}/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: matrix.registry_name == 'npm'

      - name: Generate .npmrc dynamically (GitHub)
        run: |
          echo "//${{ matrix.registry_url#https:// }}/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.registry_name == 'github'

      - name: Check if package version already published
        id: version-check
        run: |
          PKG_NAME=$(node -p "require('./package.json').name")
          PKG_VERSION=$(node -p "require('./package.json').version")

          echo "Checking $PKG_NAME@$PKG_VERSION on ${{ matrix.registry_url }}"

          if npm view "$PKG_NAME@$PKG_VERSION" --registry=${{ matrix.registry_url }} > /dev/null 2>&1; then
            echo "Already published!"
            echo "published=true" >> $GITHUB_ENV
          else
            echo "Not yet published."
            echo "published=false" >> $GITHUB_ENV
          fi

      - name: Publish package
        if: env.published == 'false'
        run: |
          echo "Publishing to ${{ matrix.registry_name }}..."
          npm publish --registry=${{ matrix.registry_url }} ${{ matrix.access && format('--access {0}', matrix.access) }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: matrix.registry_name == 'npm'

      - name: Publish package (GitHub)
        if: env.published == 'false'
        run: |
          echo "Publishing to ${{ matrix.registry_name }}..."
          npm publish --registry=${{ matrix.registry_url }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.registry_name == 'github'
